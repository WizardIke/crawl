#!/usr/bin/env perl

use strict;
use warnings;

my $CXX = shift @ARGV; # The rest of arguments are CFLAGS of some sort.
if($CXX eq "")
{
	print STDERR "CXX not specified";
	exit 1;
}

my @args = (@ARGV, "-c", "conftest.cc");

open OUT, ">", "conftest.cc" or die $!;
print OUT <<__eof__;
#include <unistd.h>
int main()
{
    fdatasync(1);
    return 0;
}
__eof__
close OUT or die $!;

my $FDATASYNC = "#undef CRAWL_HAVE_FDATASYNC";
$FDATASYNC = "#define CRAWL_HAVE_FDATASYNC" if system($CXX, @args) == 0;

open OUT, ">", "conftest.cc" or die $!;
print OUT <<__eof__;
#include <cstring>
using namespace std;
int main()
{
    const char *src = "hello";
    char dst[10];
    strlcpy(dst, src, sizeof(dst));
    return 0;
}
__eof__
close OUT or die $!;

my $STRLCPY = "#undef CRAWL_HAVE_STRLCPY";
$STRLCPY = "#define CRAWL_HAVE_STRLCPY" if system($CXX, @args) == 0;

open OUT, ">", "conftest.cc" or die $!;
print OUT <<__eof__;
#include <cstdlib>
using namespace std;
int main()
{
    char file[] = "XXXXXX";
    mkstemp(file);
    return 0;
}
__eof__
close OUT or die $!;

my $MKSTEMP = "#undef CRAWL_HAVE_MKSTEMP";
$MKSTEMP = "#define CRAWL_HAVE_MKSTEMP" if system($CXX, @args) == 0;

open OUT, ">", "conftest.cc" or die $!;
print OUT <<__eof__;
#include <unistd.h>
int main()
{
    usleep(0);
    return 0;
}
__eof__
close OUT or die $!;

my $USLEEP = "#undef CRAWL_HAVE_USLEEP";
$USLEEP = "#define CRAWL_HAVE_USLEEP" if system($CXX, @args) == 0;

unlink "conftest.cc";
unlink "conftest.o";

open OUT, ">", "config.h";
print OUT <<__eof__;
#pragma once

// Generated by util/configure.pl

${FDATASYNC}
${STRLCPY}
${MKSTEMP}
${USLEEP}
__eof__
close OUT or die $!;
